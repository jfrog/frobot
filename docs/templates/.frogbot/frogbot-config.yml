# Params represents the parameters for a single Git repository
# For Bitbucket Server and Azure Repos, you can define multiple "params" sections one after the other
- params:
    # Git parameters
    git:
      # [Mandatory]
      # Name of the git repository to scan
      repoName: repo-name

      # [Mandatory]
      # List of branches to scan.
      branches:
        - master

    # Frogbot scanning parameters
    scan:
      # [Optional, Default: false]
      # Displays all existing vulnerabilities, including the ones that were added by the pull request.
      # includeAllVulnerabilities: false

      # [Optional, Default: true]
      # Fails the Frogbot task if any security issue is found.
      # failOnSecurityIssues: false

      # List of sub-projects / project dirs.
      projects:
      # [Mandatory for projects which use npm, yarn 2, nuget and dotnet to download their dependencies]
      # Installation command (e.g. npm i , nuget restore).
      # - installCommand: ""

      # [Optional, Default: root directory]
      # List of relative path's to the projects directories in the git repository.
      #   workingDirs:
      #     - "."

      # [Mandatory for pip only if using requirements file, Default: pip install .]
      # The requirements file name that used to install dependencies in case of pip package manager.
      #   pipRequirementsFile: ""

      # [Optional, Default: true]
      # Use Gradle Wrapper (gradlew/gradlew.bat) to run Gradle.
      #   useWrapper: true

    # JFrog Platform parameters
    jfrogPlatform:
    # [Optional]
    # JFrog project key. Learn more about it here: https://www.jfrog.com/confluence/display/JFROG/Projects.
    # jfrogProjectKey: ""

    # [Optional]
    # Xray Watches. Learn more about them here: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches.
    # watches:
    #  - ""