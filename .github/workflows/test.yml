name: "Go Tests"

on:
  push:
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [labeled]

# Ensures that only the latest commit is running for each PR at a time.
# Ignores this rule for push events.
concurrency:
  group: ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  bitbucket-server-integration:
    name: Bitbucket Server Integration Tests
    runs-on: macos-latest
    env:
      JFROG_CLI_LOG_LEVEL: "DEBUG"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Unzip Preconfigured Bitbucket Server
        run: |
          unzip ${{ github.workspace }}/testdata/resources/bitbucket_server.zip -d ${PWD}
      - name: Download Bitbucket Server
        run: |
          export BITBUCKET_HOME=${PWD}/bitbucketServer
          curl -fLg https://www.atlassian.com/software/stash/downloads/binary/atlassian-bitbucket-8.14.2.tar.gz -O
          tar -xvzf atlassian-bitbucket-8.14.2.tar.gz
          cd atlassian-bitbucket-8.14.2
          ./bin/set-bitbucket-home.sh 
          ./bin/start-bitbucket.sh 

      #      - name: Run Bitbucket Server container
      #        run: |
      #          chmod 777 ${PWD}/bitbucketServer
      #          docker run -v ${PWD}/bitbucketServer:/var/atlassian/application-data/bitbucket --name="bitbucket"  -p 7990:7990 -p 7999:7999 atlassian/bitbucket-server

      #      - name: Wait for Bitbucket Server to finish loading
      #        uses: nev7n/wait_for_response@v1
      #        with:
      #          url: "http://localhost:7990/status"
      #          responseCode: 200
      #          timeout: 1200000
      #          interval: 500

      - name: wait
        run: |
          retries=3
          until [ $retries -le 0 ]; do
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:7990/status)
            if [ "$response" = "200" ]; then
              echo "Success! Status code 200 received."
              break
            else
              echo "Status code $response received. Retrying in 5 seconds..."
              sleep 50
              retries=$((retries - 1))
            fi
          done

      - name: Run Tests
        env:
          JF_URL: ${{ secrets.PLATFORM_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.PLATFORM_ADMIN_TOKEN }}
          FROGBOT_TESTS_BB_SERVER_TOKEN: ${{ secrets.FROGBOT_TESTS_BB_SERVER_TOKEN }}
          JFROG_CLI_LOG_LEVEL: "DEBUG"
        run: go test -v bitbucket_server_test.go commands.go integrationutils.go